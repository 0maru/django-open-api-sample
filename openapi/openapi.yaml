openapi: 3.0.3
info:
  title: DJANGO_OPEN_API_SAMPLE
  version: 1.0.0
  description: Django から生成したOpenAPIです
paths:
  /api/v1/todo/:
    get:
      operationId: v1TodoList
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
          description: ''
    post:
      operationId: v1TodoCreate
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Todo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
  /api/v1/todo/{id}/:
    get:
      operationId: v1TodoRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    put:
      operationId: v1TodoUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Todo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    patch:
      operationId: v1TodoPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    delete:
      operationId: v1TodoDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    PatchedTodo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: タイトル
          maxLength: 100
        description:
          type: string
          title: 詳細
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: ステータス
        create_date:
          type: string
          format: date-time
          readOnly: true
    StatusEnum:
      enum:
      - not_started
      - in_progress
      - completed
      type: string
      description: |-
        * `not_started` - Not Started
        * `in_progress` - In Progress
        * `completed` - Completed
    Todo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: タイトル
          maxLength: 100
        description:
          type: string
          title: 詳細
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: ステータス
        create_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - create_date
      - description
      - id
      - status
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
